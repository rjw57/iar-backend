# docker-compose file for local development and testing with container image.
version: '3.2'
services:
  # Swagger UI for database
  swagger-ui:
    image: swaggerapi/swagger-ui:v3.14.0
    command: ["nginx", "-g", "daemon off;"]
    ports:
      - "8000:8080"
    volumes:
      - './swagger-index.html:/usr/share/nginx/html/index.html'

  # Backend database
  iar-db:
    image: postgres:9.6
    env_file:
      - base.env
    volumes:
      - postgres-data-local:/var/lib/postgresql/data
      - postgres-backup-local:/backups

  # Lookup proxy service
  lookupproxy:
    build:
      context: .
      dockerfile: ./lookupproxy.Dockerfile
    expose:
      - "8080"
    ports:
      - "8020:8080"
    depends_on:
      - "lookupproxy-db"
      - "hydra"
    env_file:
      - lookupproxy.env

  lookupproxy-db:
    image: postgres
    env_file:
      - lookupproxy.env
    volumes:
      - lookupproxy-postgres-data-local:/var/lib/postgresql/data
      - lookupproxy-postgres-backup-local:/backups

  # Hydra OAuth2 infrastructure
  hydra:
    image: oryd/hydra:v0.11.6-alpine
    entrypoint: ["/tmp/start-hydra.sh"]
    ports:
      - "4444:4444"
      - "4445:4445"
    env_file:
      - hydra.env
    depends_on:
      - hydra-db
    volumes:
      - "./start-hydra.sh:/tmp/start-hydra.sh/:ro"

  consent:
    image: uisautomation/experimental-mock-consent-app
    env_file:
      - hydra-consent.env
    ports:
      - "8090:8090"

  hydra-db:
    image: postgres
    env_file:
      - hydra.env
    volumes:
      - hydra-postgres-data-local:/var/lib/postgresql/data
      - hydra-postgres-backup-local:/backups
      - hydra.env

volumes:
  # Persistent volumes for postgres database data
  postgres-data-local:
  postgres-backup-local:
  lookupproxy-postgres-data-local:
  lookupproxy-postgres-backup-local:
  hydra-postgres-data-local:
  hydra-postgres-backup-local:
