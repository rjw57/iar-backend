# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2

jobs:
  deploy:
    machine: true

    environment:
      IAR_BACKEND_REPO: ${CIRCLE_REPOSITORY_URL}
      IAR_BACKEND_REF: ${CIRCLE_SHA1}

    steps:
      - add_ssh_keys:
          fingerprints:
            - "86:43:cc:97:28:b9:28:6d:05:ed:a6:b6:24:51:84:2f"

      - run:
          name: Updating GCloud SDK
          command: |
            sudo /opt/google-cloud-sdk/bin/gcloud components update
            sudo /opt/google-cloud-sdk/bin/gcloud components install beta kubectl
            # Fix permissions on Google Cloud SDK logs
            sudo chown -R "${USER}" ~/.config/gcloud/logs

      - run:
          name: Authenticate to Google Cloud
          command: |
            echo "$GCLOUD_SERVICE_KEY" > ${HOME}/gcloud-service-key.json
            /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            /opt/google-cloud-sdk/bin/gcloud config set project $GCLOUD_PROJECT

      - run:
          name: Checkout deployment repository
          command: |
            git clone git@github.com:uisautomation/iar-deploy .

      - run:
          name: Deploy
          command: |
            DRY_RUN=1 ./deploy.sh test

  # Run default unittests and submit code coverage information
  test:
    docker:
      - image: circleci/python:3.6
      - image: postgres:9.6

    environment:
      DJANGO_DB_ENGINE: django.db.backends.postgresql
      DJANGO_DB_HOST: localhost
      DJANGO_DB_NAME: db
      DJANGO_DB_USER: postgres
      DJANGO_DB_PASSWORD: dbpass
      POSTGRES_DB: db
      POSTGRES_PASSWORD: dbpass

    steps:
      - checkout

      - run:
          name: Install test runner dependencies
          command: |
            python -m virtualenv -p $(which python3) ./venv/
            source ./venv/bin/activate
            pip install tox codecov

      - run:
          name: Run test suite
          command: |
            source ./venv/bin/activate
            tox

      - run:
          name: Submit code-coverage info
          command: |
            source ./venv/bin/activate
            codecov

      - store_artifacts:
          path: build/htmlcov
          destination: coverage

      - store_artifacts:
          path: build/doc
          destination: doc

workflows:
  version: 2
  build_and_test:
    jobs:
      #      - test
      - deploy
